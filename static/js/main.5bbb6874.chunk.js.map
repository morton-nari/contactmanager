{"version":3,"sources":["Context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","pages/About.js","components/test/Test.js","pages/Notfound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showInfo","onDel","delete","then","name","email","phone","className","onClick","bind","to","prototypes","PropTypes","object","isRequired","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","e","target","onSubmit","preventDefault","newContact","post","history","push","EditContact","a","updContact","match","params","put","Header","branding","href","prototype","string","Test","console","log","App","exact","path","component","About","Notfound","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.5bbb6874.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n      };\r\n    case \"AUPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n\r\n    dispatch: (action) => this.setState((state) => reducer(state, action)),\r\n  };\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../Context\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaMinus, FaPencilRuler, FaPencilAlt } from \"react-icons/fa\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport axios from \"axios\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showInfo: false,\r\n  };\r\n  onDel = (id, dispatch) => {\r\n    axios\r\n      .delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n      .then((res) => dispatch({ type: \"DELETE_CONTACT\", payload: id }));\r\n  };\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <div className=\"d-flex \">\r\n                <h4>{name}</h4>\r\n                <i\r\n                  onClick={() =>\r\n                    this.setState({ showInfo: !this.state.showInfo })\r\n                  }\r\n                  className=\"pl-3 pointer\"\r\n                >\r\n                  {showInfo ? <FaMinus /> : <FaPlus />}\r\n                </i>\r\n                <i\r\n                  onClick={this.onDel.bind(this, id, dispatch)}\r\n                  className=\"ml-auto pointer\"\r\n                >\r\n                  <FaTimes />\r\n                </i>\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <FaPencilAlt className=\"ml-2\" />\r\n                </Link>\r\n              </div>\r\n              {showInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">{email}</li>\r\n                  <li className=\"list-group-item\">{phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.prototypes = {\r\n  contact: PropTypes.object.isRequired,\r\n};\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../Context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              {contacts.map((contact) => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error,\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error,\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string.isRequired,\r\n};\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\",\r\n};\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../../Context\";\r\nimport TextInputGroup from \"../../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  onSubmit = (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n    // check for error\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { name: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { name: \"Phone is required\" } });\r\n      return;\r\n    }\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n    axios\r\n      .post(\"https://jsonplaceholder.typicode.com/users\", newContact)\r\n      .then((res) => dispatch({ type: \"ADD_CONTACT\", payload: res.data }));\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {},\r\n    });\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name ...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email ...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone ...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-block btn-light border\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../Context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone,\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n    // check for error\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { name: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { name: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {},\r\n    });\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name ...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email ...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone ...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-block btn-light border\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default EditContact;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaHome } from \"react-icons/fa\";\r\n\r\nconst Header = (props) => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar navbar-expand-lg navbar-dark bg-success mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div className=\"\">\r\n          <ul className=\"nav justify-content-end\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link text-white\">\r\n                <i className=\"p-1 mt-n2\">\r\n                  <FaHome />\r\n                </i>\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link text-white\">\r\n                Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link text-white \">\r\n                About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nHeader.defaultProps = {\r\n  branding: \"My App\",\r\n};\r\nHeader.prototype = {\r\n  branding: PropTypes.string.isRequired,\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport default (props) => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\"> Contact manager</h1>\r\n\r\n      <h2>{props.match.params.id}</h2>\r\n      <p>Simple app to manage contact</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  componentDidMount() {\r\n    console.log(\"componentDidMount...!\");\r\n  }\r\n  componentWillMount() {\r\n    console.log(\"componentwillMount...!\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>this is a test</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h3 className=\"display-4\">404 Page Not Found</h3>\r\n      <p className=\"lead\">Page is not Exist</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./pages/About\";\nimport Test from \"./components/test/Test\";\nimport Notfound from \"./pages/Notfound\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"./Context\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/about/:id\" component={About} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={Notfound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}